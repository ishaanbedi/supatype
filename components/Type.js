/* eslint-disable react-hooks/rules-of-hooks */
import Head from "next/head"
import Link from "next/link"
import React, { useRef, useState, useEffect } from "react"
const getCloud = () => `oneplus apple motorola samsung nextjs react tailwind supabase supatype macbook phone bed clock speaker laptop`.split(" ")
import Timer from '../components/Timer'
import Word from '../components/Word'
import { supabase } from '../utils/supabaseClient'
function startTypeNotSignedIn(props) {
    return (
        <>
            <Head>
                <title>Not Signed In : SupaType</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <section>
                <section className="text-white bg-[#1B2430] min-h-screen">
                    <div className="max-w-screen-xl px-4 py-32 mx-auto lg:h-screen lg:items-center lg:flex">
                        <div className="max-w-3xl mx-auto text-center">
                            <h1 className="text-3xl font-extrabold text-transparent sm:text-5xl bg-clip-text bg-gradient-to-r from-[#D6D5A8] to-[#816797]">
                                Oops! You are not signed in.
                            </h1>
                            <div className="flex flex-wrap justify-center gap-4 mt-8">
                                <Link href='/profile'>
                                    <a className="block w-full px-12 py-3 text-sm font-medium text-white bg-[#816797] border border-[#816797] rounded sm:w-auto active:text-opacity-75 hover:bg-transparent hover:text-white focus:outline-none focus:ring">
                                        Sign In
                                    </a>
                                </Link>
                                <Link href='/'>
                                    <a className="block w-full px-12 py-3 text-sm font-medium text-white border border-[#816797] rounded sm:w-auto hover:bg-[#816797] active:bg-[#51557E] focus:outline-none focus:ring">
                                        Home
                                    </a>
                                </Link>
                            </div>
                        </div>
                    </div>
                </section>

            </section>
        </>
    )
}
function startTypeSignedIn(props) {
    const [session, setSession] = useState(null)
    useEffect(() => {
        setSession(supabase.auth.session())

        supabase.auth.onAuthStateChange((_event, session) => {
            setSession(session)
        })
    }, [])
    const [startCounting, setStartCounting] = useState(false);
    const [userInput, setUserInput] = useState("");
    const cloud = useRef(getCloud())
    const [activeWordIndex, setActiveWordIndex] = useState(0);
    const [correctWordArray, setCorrectWordArray] = useState([]);
    var processInput = (value) => {
        if (activeWordIndex === cloud.current.length) {
            return
        }
        if (!startCounting) {
            setStartCounting(true)
        }

        if (value.endsWith(" ")) {
            if (activeWordIndex === cloud.current.length - 1) {
                setStartCounting(false)
                setUserInput("Completed")
            }
            else {
                setUserInput('')
            }
            setActiveWordIndex(index => index + 1)
            setCorrectWordArray(data => {
                const word = value.trim()
                const newResult = [...data]
                newResult[activeWordIndex] = word === cloud.current[activeWordIndex]
                return newResult
            })
        }
        else {
            setUserInput(value)
        }
    }
    return (
        <>
            <Head>
                <title>New Typing Session : SupaType</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <section className='text-center min-h-screen md:block bg-[#1B2430]'>
                <span className="m-auto">
                    <h1 className="text-white text-4xl">
                        <Timer
                            startCounting={startCounting}
                            correctWords={correctWordArray.filter(Boolean).length}
                        />
                    </h1>
                    <p className="text-white">
                        {cloud.current.map((word, index) => {
                            return <Word
                                text={word}
                                key={index}
                                active={index === activeWordIndex}
                                correct={correctWordArray[index]}
                            />
                        })}
                    </p>
                    <input type="text" value={userInput} onChange={(e) => processInput(e.target.value)} />
                </span>
            </section>
        </>
    )
}
function Type(props) {
    if (props.signedIn === true) {
        return startTypeSignedIn()
    }
    else {
        return startTypeNotSignedIn()
    }
}
export default Type